#!/bin/ash
  if [ $(find ${APP_ROOT}/var* -empty \( ! -iname "tmp" \) | wc -l) -le 0 ]; then
    eleven log info "creating new database [mariadb] ..."
    mariadb-install-db \
      --datadir=/mariadb/var \
      --skip-test-db \
      --auth-root-authentication-method=socket \
      --auth-root-socket-user=docker &> /dev/null

    mariadbd --defaults-file=${MARIADB_CONF} &
    while [ true ]; do
      if mariadb --socket=${MARIADB_SOCKET} --execute "SHOW DATABASES;" | grep -q "mysql"; then
        break;
      fi
    done
    mariadb --socket=${MARIADB_SOCKET} --execute "CREATE DATABASE IF NOT EXISTS mariadb;" mysql &> /dev/stdout
    mariadb --socket=${MARIADB_SOCKET} --execute "CREATE USER IF NOT EXISTS 'mariadb'@'%' IDENTIFIED VIA mysql_native_password USING PASSWORD('${MARIADB_PASSWORD}') OR unix_socket; GRANT ALL PRIVILEGES ON  *.* to 'mariadb'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;" mysql  &> /dev/stdout
    mariadb --socket=${MARIADB_SOCKET} --execute "CREATE USER IF NOT EXISTS 'mariabackup'@'localhost' IDENTIFIED VIA unix_socket; GRANT ALL PRIVILEGES ON *.* TO 'mariabackup'@'localhost'; FLUSH PRIVILEGES;" mysql  &> /dev/stdout
    kill -15 $(pgrep -f 'mariadbd')
    while [ true ]; do
      if ! mariadb --socket=${MARIADB_SOCKET} --execute "SHOW DATABASES;" | grep -q "mysql"; then
        break;
      fi
    done
    eleven log info "creating new database [mariadb] success"
  else
    eleven log info "loading existing database [mariadb]"
  fi